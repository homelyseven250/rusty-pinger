name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy: 
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust Nightly
      run: rustup install nightly
      
    - name: Build
      run: cargo +nightly build --verbose --release
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      if: runner.os == 'Linux' || runner.os == 'macOS'
      with:
        # Artifact name
        name: ${{ runner.os }} # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: target/release/rusty-pinger
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      if: runner.os == 'Windows'
      with:
        # Artifact name
        name: ${{ runner.os }}.exe # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: target/release/rusty-pinger.exe
